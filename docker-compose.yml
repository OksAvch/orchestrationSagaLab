services:
  controller-1:
    image: apache/kafka:latest
    container_name: controller-1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - order-service

  broker-1:
    image: apache/kafka:latest
    container_name: broker-1
    environment:
      KAFKA_NODE_ID: 4
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://host.docker.internal:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: yes
    networks:
      - order-service
    ports:
      - 9092:9092
    depends_on:
      - controller-1

  order-db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_DB=orderdb
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    ports:
      - '5432:5432'
    networks:
      - order-service
    volumes:
      - postgres:/var/lib/postgresql/data

  order-service:
    build:
      context: .
      dockerfile: ./order-service/Dockerfile
    environment:
      - ORDER_DB_HOST=order-db
      - KAFKA_HOST=broker-1
    ports:
      - "8091:8091"
    depends_on:
      - order-db
      - broker-1
    networks:
      - order-service

  inventory-service:
    build:
      context: .
      dockerfile: ./inventory-service/Dockerfile
    ports:
      - "8092:8092"
    networks:
      - inventory-service

  payment-service:
    build:
      context: .
      dockerfile: ./payment-service/Dockerfile
    ports:
      - "8093:8093"
    networks:
      - payment-service

  orchestrator-service:
    build:
      context: .
      dockerfile: ./orchestrator-service/Dockerfile
    environment:
      - KAFKA_HOST=broker-1
      - PAYMENT_HOST=payment-service
      - INVENTORY_HOST=inventory-service
    ports:
      - "8094:8094"
    depends_on:
      - broker-1
    networks:
      - order-service
      - payment-service
      - inventory-service

networks:
  order-service:
    ipam:
      driver: default
  inventory-service:
    ipam:
      driver: default
  payment-service:
    ipam:
      driver: default

volumes:
  postgres:
    driver: local